<head>
    <title>PC Memory Finder - Crusial memory finder for PC builders and enthusiasts</title>
    <meta charset="utf-8"/>
    <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
    <meta name="description" content="PC Memory Finder - Crusial memory finder for PC builders and enthusiasts. Find the best prices for PC RAM memory cards from Amazon, sorted by price per GB."/>
    <link rel="manifest" href="/static/manifest.webmanifest"/>
    <link rel="icon" type="image/png" sizes="16x16" href="/images/ram-memory-slot-16.png"/>
    <link rel="icon" type="image/png" sizes="32x32" href="/images/ram-memory-slot-32.png"/>
    <link rel="canonical" href="https://pcmemoryfinder.com/?locale=us"/>
    <link rel="mask-icon" href="/images/ram-memory-slot.svg" color="#000000"/>
    <meta name="theme-color" content="#ffffff"/>
</head>

<body>
    <header>
        <h1>PC Memory Finder - Find Your Memory Card Fast — All Amazon Models and Their Variations, Fully Filterable</h1>
        <p>No more clicking through product pages. Instantly compare RAM cards — every size, speed, and spec — sorted by price per GB.</p>
    </header>
</body>

<script is:inline>
    // Load PostHog script
    (function(document, posthog) {
        if (posthog.__SV) return;
        
        window.posthog = posthog;
        posthog._i = [];
        
        posthog.init = function(apiKey, config, namespace) {
            function registerMethod(obj, method) {
                const parts = method.split('.');
                if (parts.length === 2) {
                    obj = obj[parts[0]];
                    method = parts[1];
                }
                obj[method] = function() {
                    obj.push([method].concat(Array.prototype.slice.call(arguments, 0)));
                };
            }

            const script = document.createElement('script');
            script.type = 'text/javascript';
            script.crossOrigin = 'anonymous';
            script.async = true;
            script.src = config.api_host.replace('.i.posthog.com', '-assets.i.posthog.com') + '/static/array.js';
            
            const firstScript = document.getElementsByTagName('script')[0];
            firstScript?.parentNode?.insertBefore(script, firstScript);

            const instance = posthog;
            const ns = namespace || 'posthog';
            
            instance.people = instance.people || [];
            instance.toString = function(stub) {
                let name = 'posthog';
                if (ns !== 'posthog') name += '.' + ns;
                if (!stub) name += ' (stub)';
                return name;
            };
            
            instance.people.toString = function() {
                return instance.toString(true) + '.people (stub)';
            };

            const methods = "init me ws ys ps bs capture je Di ks register register_once register_for_session unregister unregister_for_session Ps getFeatureFlag getFeatureFlagPayload isFeatureEnabled reloadFeatureFlags updateEarlyAccessFeatureEnrollment getEarlyAccessFeatures on onFeatureFlags onSurveysLoaded onSessionId getSurveys getActiveMatchingSurveys renderSurvey canRenderSurvey canRenderSurveyAsync identify setPersonProperties group resetGroups setPersonPropertiesForFlags resetPersonPropertiesForFlags setGroupPropertiesForFlags resetGroupPropertiesForFlags reset get_distinct_id getGroups get_session_id get_session_replay_url alias set_config startSessionRecording stopSessionRecording sessionRecordingStarted captureException loadToolbar get_property getSessionProperty Es $s createPersonProfile Is opt_in_capturing opt_out_capturing has_opted_in_capturing has_opted_out_capturing clear_opt_in_out_capturing Ss debug xs getPageViewId captureTraceFeedback captureTraceMetric".split(" ");
            
            for (const method of methods) {
                registerMethod(instance, method);
            }

            posthog._i.push([apiKey, config, namespace]);
        };

        posthog.__SV = 1;

        // Initialize PostHog with configuration
        posthog.init('phc_7o2uZwISUxOtzUOUbilRsrGaImrah9WuIO2BtEJgsyu', {
            api_host: 'https://eu.i.posthog.com',
            person_profiles: 'identified_only'
        });
    })(document, window.posthog || []);
</script>

<style>
    header {
        text-align: center;
        padding: 1rem 1rem; /* Further reduced padding */
        /* Slightly more pronounced gradient */
        background-image: linear-gradient(to bottom, #ffffff, #f0f2f5);
        border-bottom: 1px solid #dce1e6;
        margin-bottom: 1rem; /* Further reduced margin */
    }

    header h1 {
        font-size: 1.5rem; /* Slightly smaller heading */
        margin-bottom: 0.3rem; /* Adjusted margin */
        color: #212529; /* Slightly darker heading */
    }

    header p {
        font-size: 0.95rem; /* Slightly smaller paragraph */
        color: #495057; /* Slightly darker paragraph text */
        max-width: 900px; /* Increased max-width to prevent wrapping */
        margin-left: auto;
        margin-right: auto;
    }
</style>
